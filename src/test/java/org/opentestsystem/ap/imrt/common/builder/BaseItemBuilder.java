package org.opentestsystem.ap.imrt.common.builder;

import org.opentestsystem.ap.common.model.Item;
import org.opentestsystem.ap.common.model.StimItem;
import org.opentestsystem.ap.imrt.common.model.BaseItem;

import java.time.Instant;

@SuppressWarnings("unchecked")
public abstract class BaseItemBuilder<B extends BaseItemBuilder, T extends BaseItem> extends BaseEntityBuilder<BaseItem> {
    private Integer key;
    private String id = "test id";
    private String subject="subject";
    private String grade="grade";
    private String workflowStatus = "wf status";
    private String itemType = "item type";
    private String depthOfKnowledge="dok";
    private String itemCreatedBy = "me";
    private Instant itemCreatedAt = Instant.now();
    private Item itemJson = new StimItem("test stim");
    private String associatedStimulusId;
    private Instant workflowStatusSetAt = Instant.now();
    private String organizationTypeId = "smarterBalanced";
    private String organizationName = "SB";
    private boolean isBeingCreated = true;

    public B withKey(Integer key) {
        this.key = key;
        return (B) this;
    }

    public B withId(String id) {
        this.id = id;
        return (B) this;
    }

    public B withSubject(String subject) {
        this.subject = subject;
        return (B) this;
    }

    public B withGrade(String grade) {
        this.grade = grade;
        return (B) this;
    }

    public B withWorkflowStatus(String workflowStatus) {
        this.workflowStatus = workflowStatus;
        return (B) this;
    }

    public B withItemType(String itemType) {
        this.itemType = itemType;
        return (B) this;
    }

    public B withDepthOfKnowledge(String depthOfKnowledge) {
        this.depthOfKnowledge = depthOfKnowledge;
        return (B) this;
    }

    public B withItemCreatedBy(String createdBy) {
        this.itemCreatedBy = createdBy;
        return (B) this;
    }

    public B withItemCreatedAt(Instant itemCreatedAt) {
        this.itemCreatedAt = itemCreatedAt;
        return (B) this;
    }

    public B withItemJson(Item item) {
        this.itemJson = item;
        return (B) this;
    }

    public B withAssociatedStimulusId(String associatedStimulusId) {
        this.associatedStimulusId = associatedStimulusId;
        return (B) this;
    }
	public B withWorkflowStatusSetAt(Instant workflowStatusSetAt) {
		this.workflowStatusSetAt = workflowStatusSetAt;
		return (B) this;
	}
	
    public B withOrganizationTypeId(String organizationTypeId) {
        this.organizationTypeId = organizationTypeId;
        return (B) this;
    }

    public B withOrganizationName(String organizationName) {
        this.organizationName = organizationName;
        return (B) this;
    }

    public B withIsBeingCreated(boolean isBeingCreated) {
        this.isBeingCreated = isBeingCreated;
        return (B) this;
    }

    public T build(T item) {
        super.build(item);
        item.setKey(key);
        item.setSubject(subject);
        item.setGrade(grade);
        item.setId(id);
        item.setWorkflowStatus(workflowStatus);
        item.setItemType(itemType);
        item.setDepthOfKnowledge(depthOfKnowledge);
        item.setItemCreatedBy(itemCreatedBy);
        item.setItemCreatedAt(itemCreatedAt);
        item.setItemJson(itemJson);
        item.setAssociatedStimulusId(associatedStimulusId);
        item.setWorkflowStatusSetAt(workflowStatusSetAt);
        item.setOrganizationTypeId(organizationTypeId);
        item.setOrganizationName(organizationName);
        item.setBeingCreated(isBeingCreated);
        return item;
    }
}
