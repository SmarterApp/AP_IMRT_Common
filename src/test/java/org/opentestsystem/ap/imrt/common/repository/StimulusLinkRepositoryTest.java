package org.opentestsystem.ap.imrt.common.repository;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.ap.imrt.common.builder.ImrtItemBuilder;
import org.opentestsystem.ap.imrt.common.builder.StimulusBuilder;
import org.opentestsystem.ap.imrt.common.model.ImrtItem;
import org.opentestsystem.ap.imrt.common.model.Stimulus;
import org.opentestsystem.ap.imrt.common.model.StimulusLink;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.transaction.annotation.Transactional;

import static org.assertj.core.api.Assertions.assertThat;

@RunWith(SpringRunner.class)
@SpringBootTest
@Transactional
public class StimulusLinkRepositoryTest {

    @Autowired
    private StimulusLinkRepository stimulusLinkRepository;

    @Autowired
    private ImrtItemRepository imrtItemRepository;

    @Autowired
    private StimulusRepository stimulusRepository;

    private ImrtItem imrtItem;
    private Stimulus stimulus;

    @Before
    public void createItems() {
        // create items in the DB, for our foreign key constraint
        imrtItem = new ImrtItemBuilder().withKey(1).withId("123").build();
        imrtItem = imrtItemRepository.save(imrtItem);

        stimulus = new StimulusBuilder().withKey(2).withId("234").build();
        stimulus = stimulusRepository.save(stimulus);
    }

    @Test
    public void shouldCreateStimulusLink() {
        StimulusLink link = new StimulusLink(imrtItem, stimulus, "me");
        link = stimulusLinkRepository.save(link);
        assertThat(link).isEqualToComparingFieldByFieldRecursively(stimulusLinkRepository.findOne(imrtItem.getKey()));
    }

    @Test
    public void shouldDeleteStimulusLink() {
        StimulusLink link = new StimulusLink(imrtItem, stimulus, "me");
        link = stimulusLinkRepository.save(link);
        // There should be one row in the DB after the save
        assertThat(stimulusLinkRepository.findAll().size()).isEqualTo(1);
        stimulusLinkRepository.delete(link);
        // There should be no rows in the DB after the delete
        assertThat(stimulusLinkRepository.findAll().size()).isEqualTo(0);
    }
}
