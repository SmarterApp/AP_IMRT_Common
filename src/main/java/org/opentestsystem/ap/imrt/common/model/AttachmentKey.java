package org.opentestsystem.ap.imrt.common.model;

import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;

import javax.persistence.Embeddable;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import java.io.Serializable;

/**
 * Database key for {@code item_attachment} table
 */
@SuppressFBWarnings("SE_BAD_FIELD")
@Embeddable
public class AttachmentKey implements Serializable {
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "item_key", insertable = false, updatable = false, nullable = false)
    private BaseItem item;
    private String fileName;
    private String fileType;

    /**
     * Constructor for frameworks
     */
    private AttachmentKey() {
    }

    public AttachmentKey(final BaseItem item, final String fileName, final String fileType) {
        this.item = item;
        this.fileName = fileName;
        this.fileType = fileType;
    }

    /**
     * @return The {@link org.opentestsystem.ap.imrt.common.model.BaseItem} to which this
     * {@link org.opentestsystem.ap.imrt.common.model.Attachment} is associated
     */
    public BaseItem getItem() {
        return item;
    }

    public void setItem(final BaseItem item) {
        this.item = item;
    }


    /**
     * @return The file name of this {@link org.opentestsystem.ap.imrt.common.model.Attachment}
     */
    public String getFileName() {
        return fileName;
    }

    public void setFileName(final String fileName) {
        this.fileName = fileName;
    }

    /**
     * @return The type of {@link org.opentestsystem.ap.imrt.common.model.Attachment}
     */
    public String getFileType() {
        return fileType;
    }

    public void setFileType(final String fileType) {
        this.fileType = fileType;
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) return true;
        if (!(o instanceof AttachmentKey)) return false;

        final AttachmentKey that = (AttachmentKey) o;

        if (item != null ? !item.equals(that.item) : that.item != null) return false;
        if (getFileName() != null ? !getFileName().equals(that.getFileName()) : that.getFileName() != null)
            return false;
        return getFileType() != null ? getFileType().equals(that.getFileType()) : that.getFileType() == null;
    }

    @Override
    public int hashCode() {
        int result = item != null ? item.hashCode() : 0;
        result = 31 * result + (getFileName() != null ? getFileName().hashCode() : 0);
        result = 31 * result + (getFileType() != null ? getFileType().hashCode() : 0);
        return result;
    }
}
